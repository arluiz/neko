#
# Neko configuration file for a distributed execution
#

#
# Indicate that this is a distributed execution, not a simulation.
#
simulation = false

#
# The number of communicating processes.
#
process.num = 3

# 
# Options to find the other processes on the network.
# Process #0 is on the host where run_master is run.
# Process #1 is on host host1.your.net,
# and process #2 is on host host2.your.net
# (change the hostnames!).
# Make sure to run run_slave on these hosts before
# running run_master.
#
slave = host1.your.net,host2.your.net

#
# The class that initializes the protocol stack of each process.
# Neko calls its init method.
#
process.initializer = lse.neko.examples.basic.TestInitializer

# 
# The network used for communication.
# MetricNetwork transmits messages using TCP/IP connections.
#
network = lse.neko.networks.comm.TCPNetwork

#
# Options to enable the logging of messages
# into the file log.log on process #0, process #1, etc.
# All these are standard options for the java.util.logging package.
#

# Write the log to a file and to the console.
handlers = java.util.logging.FileHandler,java.util.logging.ConsoleHandler
# Sets the name of the log file.
java.util.logging.FileHandler.pattern = log.log
# The messages channel logs all messages exchanged among processes
# at the FINE level. 
# The file handler logs them.
# The console handler does not log them, as it only logs messages
# at levels INFO or higher.
messages.level = FINE

#
# Application parameter read by the TestInitializer class.
#
algorithm = lse.neko.examples.basic.Lamport

